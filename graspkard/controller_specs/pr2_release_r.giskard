scope = {
	unitX = vec3(1,0,0);
	unitY = vec3(0,1,0);
	unitZ = vec3(0,0,1);

	j_torso_lift    = input(0);

	j_shoulder_pan  = input(1);
	j_shoulder_lift = input(2);
	j_upper_arm_roll= input(3);
	j_elbow_flex    = input(4);
	j_forearm_roll  = input(5);
	j_wrist_flex    = input(6);
	j_wrist_roll    = input(7);
	j_gripper       = input(8);

	old_pos = vec3(input(9), input(10), input(11));
	old_rot = rotation(vec3(input(12), input(13), input(14)), input(15));
	old = frame(old_rot, old_pos);

	opening = input(16); 

	torso_lift       = frame(rotation(unitX, 0), vec3(-0.05, 0, 0.739675 + j_torso_lift));
	shoulder_pan  = frame(rotation(unitZ, j_shoulder_pan),   vec3(0, -0.188, 0));
	shoulder_lift = frame(rotation(unitY, j_shoulder_lift),  vec3(0.1, 0, 0));
	upper_arm_roll= frame(rotation(unitX, j_upper_arm_roll), vec3(0, 0, 0));
	elbow_flex    = frame(rotation(unitY, j_elbow_flex),     vec3(0.4, 0, 0));
	forearm_roll  = frame(rotation(unitX, j_forearm_roll),   vec3(0, 0, 0));
	wrist_flex    = frame(rotation(unitY, j_wrist_flex),     vec3(0.321, 0, 0));
	wrist_roll    = frame(rotation(unitX, j_wrist_roll),     vec3(0, 0, 0));

	elbow = torso_lift * shoulder_pan * shoulder_lift * upper_arm_roll * elbow_flex ;
	wrist = elbow * forearm_roll * wrist_flex * wrist_roll;
	
	finger_length = 0.06;

	# Open the gripper
	grasp_err = opening - j_gripper;

	pre_scale = if (grasp_err - 0.002, 0, 1);

	# Freeze rotation
	wrist_x = wrist.rot * unitX;
	wrist_z = wrist.rot * unitZ;
	w_pos = wrist.pos;

	goal_x = old_rot * unitX;
	goal_y = old_rot * unitY;
	goal_z = old_rot * unitZ;

	align_scale = 10;

	pitch_ctrl = 1 - wrist_x * goal_x;
	pitch_err = -pitch_ctrl * align_scale;

	yaw_ctrl = 1 - wrist_z * goal_z;
	yaw_err = -yaw_ctrl * align_scale;	

	diff = wrist_pos - old_pos;

	y_align_ctrl = diff * goal_y;
	y_align_err = -y_align_ctrl * align_scale;

	z_align_ctrl = diff * goal_z;
	z_align_err = -z_align_ctrl * align_scale;

	x_goal_ctrl = -finger_length - 0.05 - diff * goal_x;
	x_goal_err = -x_goal_ctrl * pre_scale;

	feedback = -x_goal_ctrl
}

controllableConstraints = {
	controllableConstraint(negVelLimitTorso, posVelLimitTorso, weightTorso, 0, "j_torso_lift");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 1, "j_shoulder_pan_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 2, "j_shoulder_lift_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 3, "j_upper_arm_roll_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 4, "j_elbow_flex_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 5, "j_forearm_roll_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 6, "j_wrist_flex_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightGripper, 7, "j_wrist_roll_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, 1, 8, "j_gripper")
}

softConstraints = {
	softConstraint(grasp_err, grasp_err, 10, j_gripper, "Gripper opening");
	
	softConstraint(pitch_err, pitch_err, weightRotationGoal, pitch_ctrl, "Pitch freeze");
	softConstraint(yaw_err, yaw_err, weightRotationGoal, yaw_ctrl, "Yaw freeze");
	softConstraint(y_align_err, y_align_err, weightRotationGoal, y_align_ctrl, "Y-freeze");
	softConstraint(z_align_err, z_align_err, weightRotationGoal, z_align_ctrl, "Z-freeze");
	softConstraint(x_goal_err, x_goal_err, weightRotationGoal, x_goal_ctrl, "X-Goal")
}	

hardConstraints = {
	hardConstraint(0.0115 - j_torso_lift, 0.325 - j_torso_lift, j_torso_lift);
	
	# # Right arm constraints
	hardConstraint(-2.1353 - j_shoulder_pan,  0.5646 - j_shoulder_pan,   j_shoulder_pan);
	hardConstraint(-0.3536 - j_shoulder_lift, 1.2963 - j_shoulder_lift,  j_shoulder_lift);
	hardConstraint(-3.75   - j_upper_arm_roll,  0.65 - j_upper_arm_roll, j_upper_arm_roll);
	hardConstraint(-2.1213 - j_elbow_flex,     -0.15 - j_elbow_flex,     j_elbow_flex);
	hardConstraint(-2.0    - j_wrist_flex,      -0.1 - j_wrist_flex,     j_wrist_flex)
}