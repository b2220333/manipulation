scope = {
	unitX = vec3(1,0,0);
	unitY = vec3(0,1,0);
	unitZ = vec3(0,0,1);

	j_torso_lift    = input(0);

	j_shoulder_pan  = input(1);
	j_shoulder_lift = input(2);
	j_upper_arm_roll= input(3);
	j_elbow_flex    = input(4);
	j_forearm_roll  = input(5);
	j_wrist_flex    = input(6);
	j_wrist_roll    = input(7);
	j_gripper       = input(8);

	handle_pos = vec3(input(9), input(10), input(11));
	handle_rot = rotation(vec3(input(12), input(13), input(14)), input(15));
	handle = frame(handle_rot, handle_pos);

	handle_depth = input(16);
	handle_width = input(17);

	torso_lift       = frame(rotation(unitX, 0), vec3(-0.05, 0, 0.739675 + j_torso_lift));
	shoulder_pan  = frame(rotation(unitZ, j_shoulder_pan),   vec3(0, -0.188, 0));
	shoulder_lift = frame(rotation(unitY, j_shoulder_lift),  vec3(0.1, 0, 0));
	upper_arm_roll= frame(rotation(unitX, j_upper_arm_roll), vec3(0, 0, 0));
	elbow_flex    = frame(rotation(unitY, j_elbow_flex),     vec3(0.4, 0, 0));
	forearm_roll  = frame(rotation(unitX, j_forearm_roll),   vec3(0, 0, 0));
	wrist_flex    = frame(rotation(unitY, j_wrist_flex),     vec3(0.321, 0, 0));
	wrist_roll    = frame(rotation(unitX, j_wrist_roll),     vec3(0, 0, 0));

	elbow = torso_lift * shoulder_pan * shoulder_lift * upper_arm_roll * elbow_flex ;
	wrist = elbow * forearm_roll * wrist_flex * wrist_roll;
	gripper = wrist * frame(rotation(0,0,0,1), vec3(0.13,0,0));

	grasp_err = handle_width - j_gripper + 0.01;

	finger_length = 0.06;
	g_rot = gripper.rot;

	g_x = g_rot * unitX;
	g_z = g_rot * unitZ;

	h_x = handle_rot * unitX;
	h_y = handle_rot * unitY;
	h_z = handle_rot * unitZ;

	g2h = gripper.pos - handle_pos;
	gh_xd = g2h * h_x;
	gh_yd = g2h * h_y;
	gh_zd = g2h * h_z;


	ang_scale = 2;

	tilt_ctrl = h_x * g_x;
	tilt_err = (1 - tilt_ctrl) * ang_scale;
	yaw_roll_ctrl = h_z * g_z;
	yaw_roll_err = (1 - yaw_roll_ctrl) * ang_scale;

	rot_align = tilt_err + yaw_roll_err;
	pre_err = 5 * (abs(gh_yd) + abs(gh_zd)) + rot_align;

	decision = pre_err - 0.1 + abs(grasp_err);
	x_low_err = if(decision, -100, 0.5 * handle_depth - finger_length - gh_xd);
	x_hig_err = if(decision, -0.05, 0.5 * handle_depth) - finger_length - gh_xd;

	pre_x = if(x_low_err, 1, 0.1);

	gh_yd_err = -gh_yd;
	gh_zd_err = -gh_zd;

	# Limits, weights and the like
	negVelLimitTorso = -0.02;
	posVelLimitTorso =  0.02;
	negVelLimitArm   = -0.6;
	posVelLimitArm   =  0.6;

	weightGripper = 0.001;
	weightArm   = weightGripper * 10;
	weightTorso = weightArm * 10;

	weightPositionGoal = 1;
	weightRotationGoal = 4;

	feedback = pre_err + 0.5 * handle_depth - gh_xd
}

controllableConstraints = {
	controllableConstraint(negVelLimitTorso, posVelLimitTorso, weightTorso, 0, "j_torso_lift");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 1, "j_shoulder_pan_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 2, "j_shoulder_lift_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 3, "j_upper_arm_roll_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 4, "j_elbow_flex_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 5, "j_forearm_roll_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightArm, 6, "j_wrist_flex_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, weightGripper, 7, "j_wrist_roll_r");
	controllableConstraint(negVelLimitArm, posVelLimitArm, 0.001, 8, "j_gripper")
}

softConstraints = {
	softConstraint(grasp_err, grasp_err, 10, j_gripper, "Gripper opening");

	softConstraint(x_low_err, x_hig_err, weightPositionGoal, gh_xd, "Depth align");
	softConstraint(gh_yd_err, gh_yd_err, weightPositionGoal, gh_yd, "Horizontal align");
	softConstraint(gh_zd_err, gh_zd_err, weightPositionGoal, gh_zd, "Vertical align");

	softConstraint(tilt_err, tilt_err, weightRotationGoal, tilt_ctrl, "Tilt align");
	softConstraint(yaw_roll_err, yaw_roll_err, weightRotationGoal, yaw_roll_ctrl, "Yaw Roll align")
}	

hardConstraints = {
	hardConstraint(0.0115 - j_torso_lift, 0.325 - j_torso_lift, j_torso_lift);
	
	# # Right arm constraints
	hardConstraint(-2.1353 - j_shoulder_pan,  0.5646 - j_shoulder_pan,   j_shoulder_pan);
	hardConstraint(-0.3536 - j_shoulder_lift, 1.2963 - j_shoulder_lift,  j_shoulder_lift);
	hardConstraint(-3.75   - j_upper_arm_roll,  0.65 - j_upper_arm_roll, j_upper_arm_roll);
	hardConstraint(-2.1213 - j_elbow_flex,     -0.15 - j_elbow_flex,     j_elbow_flex);
	hardConstraint(-2.0    - j_wrist_flex,      -0.1 - j_wrist_flex,     j_wrist_flex)
}